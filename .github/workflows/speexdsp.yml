name: speexdsp

on: [push, pull_request]

jobs:

  rustfmt-clippy:

    runs-on: ubuntu-latest

    env:
      SPEEX_DIR: speex-dir

    steps:
    - uses: actions/checkout@v2

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Run rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check --verbose

    - name: Install speexdsp
      run: |
        git clone https://github.com/xiph/speexdsp.git
        cd speexdsp
        ./autogen.sh
        ./configure --prefix=$HOME/$SPEEX_DIR
        make -j4 install

    - name: Set environment variables
      run: |
        echo "::set-env name=PKG_CONFIG_PATH::$HOME/$SPEEX_DIR/lib/pkgconfig"
        echo "::set-env name=LD_LIBRARY_PATH::$HOME/$SPEEX_DIR/lib"

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --all-targets --all-features --tests -- --verbose

  build:

    env:
      SPEEX_DIR: speex-dir

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install speexdsp
      run: |
        git clone https://github.com/xiph/speexdsp.git
        cd speexdsp
        ./autogen.sh
        ./configure --prefix=$HOME/$SPEEX_DIR
        make -j4 install

    - name: Set environment variables
      run: |
        echo "::set-env name=PKG_CONFIG_PATH::$HOME/$SPEEX_DIR/lib/pkgconfig"
        echo "::set-env name=LD_LIBRARY_PATH::$HOME/$SPEEX_DIR/lib"

    - name: Run no-default-features tests
      run: |
        cargo test --all --no-default-features

    - name: Run all-features tests
      run: |
        cargo test --all --all-features
